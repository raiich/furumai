// Generated from Furumai.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FurumaiLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly ID = 17;
	public static readonly HASH = 18;
	public static readonly DOT = 19;
	public static readonly STRING = 20;
	public static readonly EDGEOP = 21;
	public static readonly SPACES = 22;
	public static readonly SINGLE_LINE_COMMENT = 23;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "ID", "HASH", 
		"DOT", "STRING", "EDGEOP", "SPACES", "SINGLE_LINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'---'", "'config'", "'{'", "';'", "'}'", "'group'", "'zone'", 
		"'['", "','", "']'", "'hide'", "'style'", "'>'", "'*'", "':'", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "ID", "HASH", "DOT", "STRING", "EDGEOP", 
		"SPACES", "SINGLE_LINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FurumaiLexer._LITERAL_NAMES, FurumaiLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FurumaiLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FurumaiLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Furumai.g4"; }

	// @Override
	public get ruleNames(): string[] { return FurumaiLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FurumaiLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FurumaiLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FurumaiLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 19:
			this.STRING_action(_localctx, actionIndex);
			break;
		}
	}
	private STRING_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.text = this.text.slice(1, -1)
			break;

		case 1:
			 this.text = this.text.slice(1, -1) 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x19\xAB\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x05\x12h\n\x12\x03" +
		"\x12\x06\x12k\n\x12\r\x12\x0E\x12l\x03\x12\x03\x12\x06\x12q\n\x12\r\x12" +
		"\x0E\x12r\x07\x12u\n\x12\f\x12\x0E\x12x\v\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x07\x15\x82\n\x15\f\x15\x0E\x15" +
		"\x85\v\x15\x03\x15\x03\x15\x03\x15\x03\x15\x07\x15\x8B\n\x15\f\x15\x0E" +
		"\x15\x8E\v\x15\x03\x15\x03\x15\x05\x15\x92\n\x15\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x05\x16\x98\n\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x18\x03\x18\x07\x18\xA2\n\x18\f\x18\x0E\x18\xA5\v\x18\x03\x18" +
		"\x05\x18\xA8\n\x18\x03\x18\x03\x18\x02\x02\x02\x19\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x19\x03\x02\b\x06\x022;C\\aac|\x03\x02))\x03\x02$$\x05\x02\v\r\x0F\x0F" +
		"\"\"\x04\x02\f\f\x0F\x0F\x04\x03\f\f\x0F\x0F\x02\xB3\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x031\x03\x02\x02\x02\x055\x03\x02\x02\x02\x07<\x03\x02\x02\x02" +
		"\t>\x03\x02\x02\x02\v@\x03\x02\x02\x02\rB\x03\x02\x02\x02\x0FH\x03\x02" +
		"\x02\x02\x11M\x03\x02\x02\x02\x13O\x03\x02\x02\x02\x15Q\x03\x02\x02\x02" +
		"\x17S\x03\x02\x02\x02\x19X\x03\x02\x02\x02\x1B^\x03\x02\x02\x02\x1D`\x03" +
		"\x02\x02\x02\x1Fb\x03\x02\x02\x02!d\x03\x02\x02\x02#g\x03\x02\x02\x02" +
		"%y\x03\x02\x02\x02\'|\x03\x02\x02\x02)\x91\x03\x02\x02\x02+\x97\x03\x02" +
		"\x02\x02-\x99\x03\x02\x02\x02/\x9D\x03\x02\x02\x0212\x07/\x02\x0223\x07" +
		"/\x02\x0234\x07/\x02\x024\x04\x03\x02\x02\x0256\x07e\x02\x0267\x07q\x02" +
		"\x0278\x07p\x02\x0289\x07h\x02\x029:\x07k\x02\x02:;\x07i\x02\x02;\x06" +
		"\x03\x02\x02\x02<=\x07}\x02\x02=\b\x03\x02\x02\x02>?\x07=\x02\x02?\n\x03" +
		"\x02\x02\x02@A\x07\x7F\x02\x02A\f\x03\x02\x02\x02BC\x07i\x02\x02CD\x07" +
		"t\x02\x02DE\x07q\x02\x02EF\x07w\x02\x02FG\x07r\x02\x02G\x0E\x03\x02\x02" +
		"\x02HI\x07|\x02\x02IJ\x07q\x02\x02JK\x07p\x02\x02KL\x07g\x02\x02L\x10" +
		"\x03\x02\x02\x02MN\x07]\x02\x02N\x12\x03\x02\x02\x02OP\x07.\x02\x02P\x14" +
		"\x03\x02\x02\x02QR\x07_\x02\x02R\x16\x03\x02\x02\x02ST\x07j\x02\x02TU" +
		"\x07k\x02\x02UV\x07f\x02\x02VW\x07g\x02\x02W\x18\x03\x02\x02\x02XY\x07" +
		"u\x02\x02YZ\x07v\x02\x02Z[\x07{\x02\x02[\\\x07n\x02\x02\\]\x07g\x02\x02" +
		"]\x1A\x03\x02\x02\x02^_\x07@\x02\x02_\x1C\x03\x02\x02\x02`a\x07,\x02\x02" +
		"a\x1E\x03\x02\x02\x02bc\x07<\x02\x02c \x03\x02\x02\x02de\x07?\x02\x02" +
		"e\"\x03\x02\x02\x02fh\x07/\x02\x02gf\x03\x02\x02\x02gh\x03\x02\x02\x02" +
		"hj\x03\x02\x02\x02ik\t\x02\x02\x02ji\x03\x02\x02\x02kl\x03\x02\x02\x02" +
		"lj\x03\x02\x02\x02lm\x03\x02\x02\x02mv\x03\x02\x02\x02np\x07/\x02\x02" +
		"oq\t\x02\x02\x02po\x03\x02\x02\x02qr\x03\x02\x02\x02rp\x03\x02\x02\x02" +
		"rs\x03\x02\x02\x02su\x03\x02\x02\x02tn\x03\x02\x02\x02ux\x03\x02\x02\x02" +
		"vt\x03\x02\x02\x02vw\x03\x02\x02\x02w$\x03\x02\x02\x02xv\x03\x02\x02\x02" +
		"yz\x07%\x02\x02z{\x05#\x12\x02{&\x03\x02\x02\x02|}\x070\x02\x02}~\x05" +
		"#\x12\x02~(\x03\x02\x02\x02\x7F\x83\x07)\x02\x02\x80\x82\n\x03\x02\x02" +
		"\x81\x80\x03\x02\x02\x02\x82\x85\x03\x02\x02\x02\x83\x81\x03\x02\x02\x02" +
		"\x83\x84\x03\x02\x02\x02\x84\x86\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02" +
		"\x86\x87\x07)\x02\x02\x87\x92\b\x15\x02\x02\x88\x8C\x07$\x02\x02\x89\x8B" +
		"\n\x04\x02\x02\x8A\x89\x03\x02\x02\x02\x8B\x8E\x03\x02\x02\x02\x8C\x8A" +
		"\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8F\x03\x02\x02\x02\x8E\x8C" +
		"\x03\x02\x02\x02\x8F\x90\x07$\x02\x02\x90\x92\b\x15\x03\x02\x91\x7F\x03" +
		"\x02\x02\x02\x91\x88\x03\x02\x02\x02\x92*\x03\x02\x02\x02\x93\x94\x07" +
		"/\x02\x02\x94\x98\x07/\x02\x02\x95\x96\x07/\x02\x02\x96\x98\x07@\x02\x02" +
		"\x97\x93\x03\x02\x02\x02\x97\x95\x03\x02\x02\x02\x98,\x03\x02\x02\x02" +
		"\x99\x9A\t\x05\x02\x02\x9A\x9B\x03\x02\x02\x02\x9B\x9C\b\x17\x04\x02\x9C" +
		".\x03\x02\x02\x02\x9D\x9E\x071\x02\x02\x9E\x9F\x071\x02\x02\x9F\xA3\x03" +
		"\x02\x02\x02\xA0\xA2\n\x06\x02\x02\xA1\xA0\x03\x02\x02\x02\xA2\xA5\x03" +
		"\x02\x02\x02\xA3\xA1\x03\x02\x02\x02\xA3\xA4\x03\x02\x02\x02\xA4\xA7\x03" +
		"\x02\x02\x02\xA5\xA3\x03\x02\x02\x02\xA6\xA8\t\x07\x02\x02\xA7\xA6\x03" +
		"\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9\xAA\b\x18\x04\x02\xAA0\x03\x02" +
		"\x02\x02\r\x02glrv\x83\x8C\x91\x97\xA3\xA7\x05\x03\x15\x02\x03\x15\x03" +
		"\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FurumaiLexer.__ATN) {
			FurumaiLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FurumaiLexer._serializedATN));
		}

		return FurumaiLexer.__ATN;
	}

}

